apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: 'config.gradle'

android {
    compileSdkVersion build_versions.compile_sdk
    buildToolsVersion build_versions.build_tools
    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk

        applicationId APPLICATION_ID
        versionCode VERSION_CODE
        versionName VERSION_NAME

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    signingConfigs {
        release {
            storeFile file(getLocalValue("STORE_FILE"))
            storePassword getLocalValue("STORE_PASSWORD")
            keyAlias getLocalValue("KEY_ALIAS")
            keyPassword getLocalValue("KEY_PASSWORD")
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'

    implementation 'com.google.android.material:material:1.0.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

    implementation deps.kotlin.stdlib
}
repositories {
    mavenCentral()
}


def getLocalValue(String key) {
    return getLocalValue(key, false)
}

def getLocalValue(String key, boolean quot) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def value = properties.containsKey(key) ? properties.get(key) : ""
    if (quot) {
        value = "\"" + value + "\""
    }
    return value
}